"""
Problem 44 - Pentagon Numbers
-------------------------------------------------------------------------------
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""
# Tunables
SIEVE_SIZE = 100_000
PN_DISTANCE = 5_000

pnLookup = dict()
nLookup = dict()

def pFunc(n):
    # Quick Lookup
    if n in nLookup:
        return nLookup[n]

    # Calculate the value of Pn and Store
    pn = int(n*(3*n-1) / 2)
    pnLookup[pn] = n
    nLookup[n] = pn


# Build Sieve
for i in range(SIEVE_SIZE):
    pFunc(i)

mDiff = float('inf')

for j in range(1, PN_DISTANCE):
    pj = pFunc(j)
    for k in range(j+1, PN_DISTANCE):
        pk = pFunc(k)

        # Perform Checks
        sum = pj + pk
        diff = abs(pk - pj)
        if sum in pnLookup and diff in pnLookup:

            # Print all of the min Diffs
            if diff < mDiff:
                mDiff = diff
                print(f'-------------------------------------------')
                print(f'Pk: {str(pk)}')
                print(f'Pj: {str(pj)}')
                print(f'Sum: {str(sum)}')
                print(f'Diff: {str(diff)}')
