"""
Problem 2 - Even Fibonacci numbers
-------------------------------------------------------------------------------
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""

# Iteratively count in the Fibonacci sequence.
# This must take an iterative approach to avoid an stack-overflow or recursion-depth issues.
UPPER_LIMIT = 4_000_000

low_pointer = 1
high_pointer = 2
sum_of_even_fibonacci_numbers = 0
while (high_pointer < UPPER_LIMIT):

    #
    if(high_pointer % 2 == 0):
        sum_of_even_fibonacci_numbers += high_pointer

    # Next value
    tmp = high_pointer
    high_pointer += low_pointer
    low_pointer = tmp


print(sum_of_even_fibonacci_numbers)
